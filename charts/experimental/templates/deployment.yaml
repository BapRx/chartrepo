
---
{{- if semverCompare "^1.16-0" .Capabilities.KubeVersion.GitVersion }}
apiVersion: apps/v1
{{- else }}
apiVersion: apps/v1beta1
{{- end }}
{{- if .Values.deployment.useDaemonSet }}
kind: DaemonSet
{{- else }}
kind: Deployment
{{- end }}
metadata:
  name: {{ include "authelia.name" . }}
  labels:
{{- include "authelia.labels" . | nindent 4 }}
{{- with .Values.deployment.extraLabels }}
{{- toYaml . | nindent 4 }}
{{- end }}
{{- if or (include "authelia.annotations" .) (.Values.deployment.extraAnnotations) }}
  annotations:
{{- include "authelia.annotations" . | nindent 4 }}
{{- with .Values.deployment.extraAnnotations }}
{{- toYaml . | nindent 4 }}
{{- end -}}
{{- end }}
spec:
  selector:
    matchLabels:
{{- include "authelia.matchLabels" . | nindent 6 }}
{{- if .Values.deployment.useDaemonSet }}
  updateStrategy:
    type: {{ include "authelia.deploymentStrategy" . }}
{{- else }}
  replicas: {{ .Values.deployment.replicas }}
{{- if and .Values.deployment.strategy }}
  strategy:
    type: {{ include "authelia.deploymentStrategy" . }}
{{- if and .Values.deployment.strategy.rollingUpdate (eq (include "authelia.deploymentStrategy") "RollingUpdate") }}
    rollingUpdate:
{{ toYaml .Values.deployment.strategy.rollingUpdate | indent 6 }}
{{- end }}
{{- end }}
{{- end }}
{{- with .Values.deployment.tolerations }}
  tolerations:
{{ toYaml . | indent 2 }}
{{- end }}
  template:
    metadata:
      labels:
{{- include "authelia.labels" . | nindent 8 }}
{{- with .Values.deployment.extraLabels }}
{{- toYaml . | nindent 8 }}
{{- end }}
{{- if or (include "authelia.annotations" .) (.Values.deployment.extraAnnotations) }}
      annotations:
{{- include "authelia.annotations" . | nindent 8 }}
{{- with .Values.deployment.extraAnnotations }}
{{- toYaml . | nindent 8 }}
{{- end -}}
{{- end }}
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
{{- with .Values.deployment.selectors.nodeName }}
      nodeName: {{ . }}
{{- end }}
{{- with .Values.deployment.selectors.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.deployment.selectors.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.deployment.containerSecurityContext }}
      securityContext:
{{ toYaml . | indent 8 }}
{{- end }}
      containers:
      - name: authelia
        image: {{ include "authelia.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
{{- with .Values.image.pullSecrets }}
        imagePullSecrets:
{{- range . }}
        - name: {{ . }}
{{- end }}
{{- end }}
{{- with .Values.deployment.resources }}
        resources:
{{ toYaml . | indent 10 }}
{{- end }}
        env:
        - name: AUTHELIA_JWT_SECRET_FILE
          value: /usr/app/secrets/JWT_TOKEN
        - name: AUTHELIA_AUTHENTICATION_BACKEND_LDAP_PASSWORD_FILE
          value: /usr/app/secrets/LDAP_PASSWORD
        - name: AUTHELIA_SESSION_SECRET_FILE
          value: /usr/app/secrets/SESSION_ENCRYPTION_KEY
{{- if .Values.configMap.storage.postgres }}
        - name: AUTHELIA_STORAGE_POSTGRES_PASSWORD_FILE
          value: /usr/app/secrets/STORAGE_PASSWORD
{{- end }}
{{- if .Values.configMap.storage.mysql }}
        - name: AUTHELIA_STORAGE_MYSQL_PASSWORD_FILE
        - name: AUTHELIA_STORAGE_MYSQL_PASSWORD_FILE
          value: /usr/app/secrets/STORAGE_PASSWORD
{{- end }}
{{- if .Values.secret.smtp.enabled }}
        - name: AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE
          value: /usr/app/secrets/SMTP_PASSWORD
{{- end }}
{{- if and (.Values.configMap.session.redis) (.Values.secret.redis.enabled) }}
        - name: AUTHELIA_SESSION_REDIS_PASSWORD_FILE
          value: /usr/app/secrets/REDIS_PASSWORD
{{- end }}
{{- if .Values.configMap.duo_api }}
        - name: AUTHELIA_DUO_API_SECRET_KEY_FILE
          value: /usr/app/secrets/DUO_API_KEY
{{- end }}
{{- with .Values.deployment.extraEnv }}
{{ toYaml . | indent 8 }}
{{- end }}
        ports:
        - name: http
          containerPort: {{ .Values.configMap.port | default "9091" }}
          protocol: TCP
{{- with .Values.deployment.probes.startup }}
        startupProbe:
          httpGet:
            path: {{ $.Values.deployment.probes.path | default "/api/health" }}
            port: http
            scheme: HTTP
{{ toYaml . | indent 10 }}
{{- end }}
{{- with .Values.deployment.probes.liveness }}
        livenessProbe:
          httpGet:
            path: {{ $.Values.deployment.probes.path | default "/api/health" }}
            port: http
            scheme: HTTP
{{ toYaml . | indent 10 }}
{{- end }}
{{- with .Values.deployment.probes.readiness }}
        readinessProbe:
          httpGet:
            path: {{ $.Values.deployment.probes.path | default "/api/health" }}
            port: http
            scheme: HTTP
{{ toYaml . | indent 10 }}
{{- end }}
        volumeMounts:
        - mountPath: /config
          name: config
          readOnly: true
        - mountPath: /usr/app/secrets
          name: secrets
          readOnly: true
{{- with .Values.deployment.extraVolumeMounts }}
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.deployment.podSecurityContext }}
        securityContext:
{{ toYaml . | indent 10 }}
{{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ include "authelia.name" . }}
          items:
            - key: configuration.yml
              path: configuration.yml
      - name: secrets
        secret:
          secretName: {{ .Values.secret.existingSecretName | default (include "authelia.name" .) }}
          items:
          - key: {{ .Values.secret.jwt.key | default "JWT_TOKEN" }}
            path: JWT_TOKEN
          - key: {{ .Values.secret.ldap.key | default "LDAP_PASSWORD" }}
            path: LDAP_PASSWORD
          - key: {{ .Values.secret.session.key | default "SESSION_ENCRYPTION_KEY" }}
            path: SESSION_ENCRYPTION_KEY
          - key: {{ .Values.secret.storage.key | default "STORAGE_PASSWORD" }}
            path: STORAGE_PASSWORD
{{- if .Values.secret.smtp.enabled }}
          - key: {{ .Values.secret.smtp.key | default "SMTP_PASSWORD" }}
            path: SMTP_PASSWORD
{{- end }}
{{- if and (.Values.configMap.session.redis) (.Values.secret.redis.enabled) }}
          - key: {{ .Values.secret.redis.key | default "REDIS_PASSWORD" }}
            path: REDIS_PASSWORD
{{- end }}
{{- if .Values.configMap.duo_api }}
          - key: {{ .Values.secret.duo.key | default "DUO_API_KEY" }}
            path: DUO_API_KEY
{{- end }}
{{- with .Values.deployment.extraVolumes }}
{{ toYaml . | indent 6 }}
{{- end }}